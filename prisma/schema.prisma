// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      String   @default("user")
  createdAt DateTime @default(now())
  refreshTokens RefreshToken[]
  passwordResetTokens PasswordResetToken[]
  auditLogs AuditLog[]
}

model Book {
  id          Int      @id @default(autoincrement())
  title       String
  author      String
  type        String
  description String?
  createdAt   DateTime @default(now())
}

model RefreshToken {
  id         Int      @id @default(autoincrement())
  token      String   @unique
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  expiresAt  DateTime
  revoked    Boolean  @default(false)
  createdAt  DateTime @default(now())
}

model PasswordResetToken {
  id         Int      @id @default(autoincrement())
  token      String   @unique
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  expiresAt  DateTime
  used       Boolean  @default(false)
  createdAt  DateTime @default(now())
}

model AuditLog {
  id         Int      @id @default(autoincrement())
  user       User?    @relation(fields: [userId], references: [id])
  userId     Int?
  event      String
  ip         String?
  userAgent  String?
  createdAt  DateTime @default(now())
}